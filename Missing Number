//first approach mathematical approach
class Solution {
    public int missingNumber(int[] nums) {
        int n=nums.length;
        int sum=n*(n+1)/2;
        for(int i=0;i<n;i++)
        {
            sum-=nums[i];
        }

        return sum;
        
    }
}

//second approach with XOR
class Solution {
    public int missingNumber(int[] nums) {
        int n=nums.length;
       int result=n;
       for(int i=0;i<n;i++)
       {
        result=result^i;
        result=result^nums[i];
       }

       return result;
        
    }
}

//third approach with binary search
class Solution {
    public int missingNumber(int[] nums) {
         Arrays.sort(nums);
        int l = 0;
        int r = nums.length-1;
        int result = nums.length;
        

        while(l <= r) {
            int mid = l + (r-l)/2;
            if(nums[mid] > mid) {
                result = mid;
                r = mid-1;
            } else {
                l = mid+1;
            }
        }

        return result;
    }
}
